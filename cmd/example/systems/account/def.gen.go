// code generated by jonson-generate; DO NOT EDIT.

package account

import (
	"github.com/doejon/jonson"
	"reflect"
)

// ---- method call wrappers ----

// systems/account/account.go:24 -- GetV1
func GetV1(ctx *jonson.Context, p *AccountV1Params) (*AccountV1Result, error) {
	v, err := ctx.CallMethod("account/get/v1", p, nil)
	if err != nil {
		return nil, err
	}
	if v != nil {
		return v.(*AccountV1Result), nil
	}
	return nil, nil
}

// ---- type handling wrappers ----

// systems/account/account.go:6 -- Account -- struct
var TypeAccount = reflect.TypeOf((**Account)(nil)).Elem()

func RequireAccount(ctx *jonson.Context) *Account {
	if v := ctx.Require(TypeAccount).(*Account); v != nil {
		return v
	}
	return nil
}

// systems/account/provider.authorization.go:6 -- Private -- struct
var TypePrivate = reflect.TypeOf((**Private)(nil)).Elem()

func RequirePrivate(ctx *jonson.Context) *Private {
	if v := ctx.Require(TypePrivate).(*Private); v != nil {
		return v
	}
	return nil
}

// systems/account/provider.authorization.go:10 -- Public -- struct
var TypePublic = reflect.TypeOf((**Public)(nil)).Elem()

func RequirePublic(ctx *jonson.Context) *Public {
	if v := ctx.Require(TypePublic).(*Public); v != nil {
		return v
	}
	return nil
}
